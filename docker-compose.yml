services:
  astigo:
    container_name: astigo
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.debug
    security_opt:
      - "seccomp:unconfined"  # NÃ©cessaire pour le debugging
    cap_add:
      - SYS_PTRACE
    ports:
      - "8080:8080"
      - "50051:50051"
      - "2345:2345"
    environment:
      - ASTIGO_HTTP_PORT=8080
      - ASTIGO_HTTP_MODE=debug
      - ASTIGO_GRPC_PORT=50051
      - ASTIGO_AUTH_ISSUER=http://host.docker.internal:8090/realms/astigo
      - ASTIGO_AUTH_CLIENT_ID=astigo-api
      - ASTIGO_LOG_LEVEL=info
      - ASTIGO_LOG_ENCODING=json
      - ASTIGO_JAEGER_URL=jaeger:4318
      - ASTIGO_JAEGER_SERVICE_NAME=astigo
      - ASTIGO_POSTGRES_HOST=postgres
      - ASTIGO_POSTGRES_PORT=5432
      - ASTIGO_POSTGRES_DB=astigo
      - ASTIGO_POSTGRES_USER=astigo
      - ASTIGO_POSTGRES_PASSWORD=astigo_password
      - ASTIGO_NATS_URL=nats://nats:4222
      - ASTIGO_REDIS_PORT=6379
      - ASTIGO_REDIS_HOST=redis
      - ASTIGO_REDIS_DB=0
    depends_on:
      - keycloak
      - postgres
      - nats
      - redis

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=astigo
      - POSTGRES_USER=astigo
      - POSTGRES_PASSWORD=astigo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/postgres/init-db:/docker-entrypoint-initdb.d

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  nats:
    image: nats:2-alpine
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command:
      - "-m"
      - "8222"
      - "-D"
      - "-V"
      - "-V"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KEYCLOAK_FRONTEND_URL=http://host.docker.internal:8090
    command: start-dev --import-realm
    ports:
      - "8090:8080"
    volumes:
      - ./deployments/keycloak:/opt/keycloak/data/import

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI Jaeger
      - "4318:4318"     # Port OTLP HTTP
      - "4317:4317"     # Port OTLP gRPC
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./deployments/loki/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - type: tmpfs
        target: /loki/index
      - type: tmpfs
        target: /loki/cache
      - type: tmpfs
        target: /loki/chunks
      - type: tmpfs
        target: /wal

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    command: -config.file=/etc/promtail/promtail-config.yaml
    volumes:
      - ./deployments/promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - loki

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    volumes:
      - ./deployments/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./deployments/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./deployments/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin


volumes:
  postgres_data:
  redis_data: